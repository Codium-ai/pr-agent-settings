pr_compliances:
  - name: "Compliance 2: Granular Exception Handling"
    is_blocker: false
    event: "Multi-step operations with potential failure modes"
    success_criteria: "Type-specific exception handling and differentiated error responses"
    failure_criteria: "Catching all exceptions with a single, generic handler or losing specific error context"
    code_example: |
      def check_exception_compliance(exceptions):
          return len(exceptions) > 1

      def retrieve_user_data(user_id):
          exceptions = []
          try:
              return database.get_user(user_id)
          except ConnectionError as e:
              exceptions.append(e)
              logger.error("Connection failed")
          except NotFoundError as e:
              exceptions.append(e)
              logger.warning("User not found")
          
          if not check_exception_compliance(exceptions):
              logger.warning("Compliance check failed")
