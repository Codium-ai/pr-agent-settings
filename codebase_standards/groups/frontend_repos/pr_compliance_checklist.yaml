pr_compliances:
  - title: "Compliance 3: Performance and Security Logging"
    is_blocker: true
    event: "Critical operations with performance or security implications"
    success_criteria: "Non-blocking logging mechanism with minimal performance overhead and secure handling of sensitive information"
    failure_criteria: "Logging that significantly impacts system performance or exposes sensitive data"
    code_example: |
      def verify_logging_performance(log_time, sensitive_data):
          return log_time < 10 and not sensitive_data

      def process_sensitive_transaction(transaction):
          start_time = time.time()
          try:
              result = execute_transaction(transaction)
              
              log_entry = {
                  "transaction_id": anonymize(transaction.id),
                  "sensitive_data": False
              }
              
              log_time = time.time() - start_time
              if verify_logging_performance(log_time, log_entry['sensitive_data']):
                  logger.info("Transaction processed", extra=log_entry)
              
              return result
          except TransactionError as e:
              logger.error("Transaction failed", extra={"error": str(e)})
              raise
